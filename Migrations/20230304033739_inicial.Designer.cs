// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ProyectoAplicada.Migrations
{
    [DbContext(typeof(Contexto))]
    [Migration("20230304033739_inicial")]
    partial class inicial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.2");

            modelBuilder.Entity("Lending", b =>
                {
                    b.Property<int>("loanId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<float>("balance")
                        .HasColumnType("REAL");

                    b.Property<string>("conceit")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("loan_date")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("loan_expiration")
                        .HasColumnType("TEXT");

                    b.Property<int>("personalId")
                        .HasColumnType("INTEGER");

                    b.Property<float>("total")
                        .HasColumnType("REAL");

                    b.HasKey("loanId");

                    b.ToTable("Lending");
                });

            modelBuilder.Entity("Ocupaciones", b =>
                {
                    b.Property<int>("OcupacionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<float>("Salario")
                        .HasColumnType("REAL");

                    b.HasKey("OcupacionId");

                    b.ToTable("Ocupaciones");
                });

            modelBuilder.Entity("Payments", b =>
                {
                    b.Property<int>("PaymentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Conceit")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<int>("PersonId")
                        .HasColumnType("INTEGER");

                    b.Property<float>("Total")
                        .HasColumnType("REAL");

                    b.HasKey("PaymentId");

                    b.ToTable("Payment");
                });

            modelBuilder.Entity("PaymentsDetalle", b =>
                {
                    b.Property<int>("PaymentDetalleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("LoanId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PaidValue")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PaymentId")
                        .HasColumnType("INTEGER");

                    b.HasKey("PaymentDetalleId");

                    b.HasIndex("PaymentId");

                    b.ToTable("PaymentsDetalle");
                });

            modelBuilder.Entity("Person", b =>
                {
                    b.Property<int>("personId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("address")
                        .HasColumnType("TEXT");

                    b.Property<float>("balance")
                        .HasColumnType("REAL");

                    b.Property<DateTime>("birth_date")
                        .HasColumnType("TEXT");

                    b.Property<string>("email")
                        .HasColumnType("TEXT");

                    b.Property<string>("name")
                        .HasColumnType("TEXT");

                    b.Property<int>("number_cel")
                        .HasColumnType("INTEGER");

                    b.Property<int>("number_pho")
                        .HasColumnType("INTEGER");

                    b.Property<int>("occupationId")
                        .HasColumnType("INTEGER");

                    b.HasKey("personId");

                    b.ToTable("Person");
                });

            modelBuilder.Entity("PaymentsDetalle", b =>
                {
                    b.HasOne("Payments", null)
                        .WithMany("PaymentsDetalle")
                        .HasForeignKey("PaymentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Payments", b =>
                {
                    b.Navigation("PaymentsDetalle");
                });
#pragma warning restore 612, 618
        }
    }
}
